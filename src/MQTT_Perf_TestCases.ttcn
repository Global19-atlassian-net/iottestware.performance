/*******************************************************************************
* Copyright (c) 2019 
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   Alexander Kaiser
*   Sascha Kretzschmann
*   Ilie Daniel Gheorghe Pop
*******************************************************************************/
module MQTT_Perf_TestCases {

// old MQTT Broker Testing modules
import from MQTT_TestSystem all;
import from MQTT_TypesAndValues all;
import from MQTT_Functions all;
import from MQTT_Templates all;
import from MQTT_Perf_Testcase_Functions all;

// MUST NOT be imported here... refactoring required with config_02
import from MQTT_Perf_Pixits all;
import from UTF8_Helper all;
import from Random_Helper all;

// MQTT TS Framework
import from MQTT_TestSystem_Common all;
import from MQTT_TypesAndValues_Common all;
import from MQTT_Functions_SetUp all;
import from MQTT_Functions_Network all;

// MQTT 3.1.1 Protocol Modules
import from MQTT_v3_1_1_Types all;


group pingrespGroup {

  /*
  * @purpose The IUT accepts only valid fixed header flags for PINGREQ Control Packet and responds with a PINGRESP
  *
  * @reference [MQTT-2.2.2-1], [MQTT-3.12.4-1]
  */
  testcase TC_MQTT_PERF_BROKER_PINGRESP_001() runs on MQTT_Client
  {
    if(f_init())
    {
      f_TC_MQTT_PERF_BROKER_PINGRESP_001();
    }
    f_cleanUp();
  }
    testcase TC_MQTT_PERF_BROKER_PINGRESP_002() runs on MQTT_Client
  {
    //log("test log:b4 init");
    
    if(f_init())
    {
      //    log("test log: entered if");
      f_connectMqtt();
      //    log("test log: passed connect");
      for (var integer i:=0; i<100; i:=i+1){
      f_TC_MQTT_PERF_BROKER_PINGRESP_002();
      }
      //    log("test log: after pings");
      setverdict(pass, "IUT answered correctly to PINGREQ with PINGRESP and duration ");
      f_disconnectMqtt();
      //    log("test log: after disconnect");
    }
    f_cleanUp();
  }
} // pingrespGroup

}